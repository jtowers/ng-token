!function(){!function(){var e=angular.module("ngToken.Interceptor",["ngToken.User"]);e.factory("ngToken.Intercept",["$rootScope","AUTH_EVENTS","$q","$window","$tokenUser",function(e,t,o,n,s){var i={};return i.request=function(e){return e.headers=e.headers||{},s.getToken()&&(e.headers.Authorization="Bearer "+s.getToken()),e},i.responseError=function(e){return 401===e.status&&(e.data.reason=t.notAuthenticated),o.reject(e)},i}]),e.config(["$httpProvider",function(e){e.interceptors.push("ngToken.Intercept")}]),e.constant("AUTH_EVENTS",{loginSuccess:"auth-login-success",loginFailed:"auth-login-failed",logoutSuccess:"auth-logout-success",sessionTimeout:"auth-session-timeout",notAuthenticated:"auth-not-authenticated",notAuthorized:"auth-not-authorized",notImplemented:"feature-not-implemented",notInstalled:"install-not-complete"})}(),function(){var e=angular.module("ngToken.Provider",["ngToken.User"]);e.provider("$token",function(){this.defaults={endpoints:{login:"/login",keepAlive:"/token/keepAlive",logout:"/logout"},tokenStorage:"localStorage",manageTimeout:!0},this.newToken=function(e,t){e&&(this.defaults.endpoints.newToken.method=e),t&&(this.defaults.endpoints.newToken.url=t)},this.keepAlive=function(e){if(!e)throw new Error("keepalive endpoint must exist");this.defaults.endpoints.keepAlive.url=e},this.tokenStorage=function(e){if("localStorage"!==e&&"sessionStorage"!==e)throw new Error("storage must be localStorage or sessionStorage");this.defaults.tokenStorage=e},this.manageTimeout=function(e){if("boolean"!=typeof e)throw new Error("manageSessionTimeout should be boolean");this.defaults.manageTimeout=e},this.$get=["$rootScope","$window","$http","$tokenUser",function(e,t,o,n){var s=this;return this.srv={},this.srv.manageTimeout=this.defaults.manageTimeout,"localStorage"===this.defaults.tokenStorage&&(this.srv.$storage=t[this.defaults.tokenStorage]),this.srv.getCachedToken=function(){return n.getToken()},this.srv.setToken=function(e){n.setToken(e)},this.srv.sessionExpired=function(){n.removeToken()},this.srv.logout=function(){s.srv.sessionExpired()},this.srv.login=function(){o.post(s.defaults.endpoints.login).success(function(t){s.srv.setToken(t.token),e.$broadcast("$tokenAuthSuccess",t)}).error(function(t){e.$broadcast("$tokenAuthFail",t)})},this.srv.keepAlive=function(){o.post(s.defaults.endpoints.keepAlive).success(function(t){UserService.setToken(t.token),e.$broadcast("$tokenKeepAlive",t)}).error(function(t){e.$broadcast("$tokenKeepAliveFail",t)})},this.srv}]})}(),function(){var e=angular.module("ngToken.TimeoutManager",["ngToken.Provider","ngIdle"]);e.factory("$tokenTimeout",["$idle","$token","$window","$rootScope","$document",function(e,t,o,n,s){var i={};return i.checkIdle=function(e){t.getCachedToken()&&(t.$storage.lastTouch<=this.lastActivity||!this.lastActivity?n.$broadcast("$tokenWarn",e):this.resetIdle())},i.resetIdle=function(){e.unwatch(),e.watch()},i.watch=function(){console.log("watching");var o=this;e.watch(),n.$on("startIdle",o.resetIdle()),s.on(e._options().events,function(){var e=new Date;t.$storage.lastTouch=e,o.lastActivity=e}),n.$on("$idleWarn",function(e,t){console.log("warning: "+t),this.checkIdle(t)}),n.$on("$idleTimeout",function(){console.log("timeout"),t.sessionExpired(),n.$broadcast("$tokenExpired")}),n.$on("$keepalive",function(){t.keepAlive()})},i}])}(),function(){"use strict";var e=angular.module("ngToken.User",[]);e.factory("$tokenUser",["$window","$rootScope",function(e){var t={};return t.$storage=e.localStorage,t.setStorage=function(t){this.$storage=e[t]},t.getStorage=function(){return this.$storage},t.getToken=function(){return this.$storage.userToken},t.setToken=function(e){return this.$storage.userToken=e,e},t.removeToken=function(){return delete this.$storage.userToken},t}])}(),angular.module("ngToken",["ngToken.Provider","ngToken.Interceptor","ngToken.TimeoutManager"]).run(["$token","$tokenTimeout",function(e,t){console.log(e.manageTimeout),e.manageTimeout&&t.watch()}])}();